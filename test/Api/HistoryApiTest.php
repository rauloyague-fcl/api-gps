<?php
/**
 * HistoryApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Fleet API Specification
 *
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * OpenAPI spec version: 2.83.0
 * Contact: support@keytelematics.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.47-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * HistoryApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class HistoryApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for addTripLabels
     *
     * .
     *
     */
    public function testAddTripLabels()
    {
    }

    /**
     * Test case for clearTripPrivate
     *
     * .
     *
     */
    public function testClearTripPrivate()
    {
    }

    /**
     * Test case for getAlertHistory
     *
     * .
     *
     */
    public function testGetAlertHistory()
    {
    }

    /**
     * Test case for getCompletedReport
     *
     * .
     *
     */
    public function testGetCompletedReport()
    {
    }

    /**
     * Test case for getCompletedReportData
     *
     * .
     *
     */
    public function testGetCompletedReportData()
    {
    }

    /**
     * Test case for getCompletedReportDataStream
     *
     * .
     *
     */
    public function testGetCompletedReportDataStream()
    {
    }

    /**
     * Test case for getCompletedReportDataWithOptions
     *
     * .
     *
     */
    public function testGetCompletedReportDataWithOptions()
    {
    }

    /**
     * Test case for getCompletedReportWithOptions
     *
     * .
     *
     */
    public function testGetCompletedReportWithOptions()
    {
    }

    /**
     * Test case for getEventHistory
     *
     * .
     *
     */
    public function testGetEventHistory()
    {
    }

    /**
     * Test case for getLogHistoryForEntity
     *
     * .
     *
     */
    public function testGetLogHistoryForEntity()
    {
    }

    /**
     * Test case for getTelemetryHistory
     *
     * .
     *
     */
    public function testGetTelemetryHistory()
    {
    }

    /**
     * Test case for getTripHistory
     *
     * .
     *
     */
    public function testGetTripHistory()
    {
    }

    /**
     * Test case for listCompletedReports
     *
     * .
     *
     */
    public function testListCompletedReports()
    {
    }

    /**
     * Test case for removeTripLabels
     *
     * .
     *
     */
    public function testRemoveTripLabels()
    {
    }

    /**
     * Test case for setTripPrivate
     *
     * .
     *
     */
    public function testSetTripPrivate()
    {
    }

    /**
     * Test case for updateCompletedReport
     *
     * .
     *
     */
    public function testUpdateCompletedReport()
    {
    }
}
