<?php
/**
 * AssetCreateRequestTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Fleet API Specification
 *
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * OpenAPI spec version: 2.83.0
 * Contact: support@keytelematics.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.47-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * AssetCreateRequestTest Class Doc Comment
 *
 * @category    Class
 * @description AssetCreateRequest
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class AssetCreateRequestTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "AssetCreateRequest"
     */
    public function testAssetCreateRequest()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "asset_type"
     */
    public function testPropertyAssetType()
    {
    }

    /**
     * Test attribute "color"
     */
    public function testPropertyColor()
    {
    }

    /**
     * Test attribute "tags"
     */
    public function testPropertyTags()
    {
    }

    /**
     * Test attribute "cost_centre"
     */
    public function testPropertyCostCentre()
    {
    }

    /**
     * Test attribute "rating_profile"
     */
    public function testPropertyRatingProfile()
    {
    }

    /**
     * Test attribute "asset_state_profiles"
     */
    public function testPropertyAssetStateProfiles()
    {
    }

    /**
     * Test attribute "overspeed_profile"
     */
    public function testPropertyOverspeedProfile()
    {
    }

    /**
     * Test attribute "geo_lock_profile"
     */
    public function testPropertyGeoLockProfile()
    {
    }

    /**
     * Test attribute "road_profile"
     */
    public function testPropertyRoadProfile()
    {
    }

    /**
     * Test attribute "privacy_profile"
     */
    public function testPropertyPrivacyProfile()
    {
    }

    /**
     * Test attribute "groups"
     */
    public function testPropertyGroups()
    {
    }

    /**
     * Test attribute "categories"
     */
    public function testPropertyCategories()
    {
    }

    /**
     * Test attribute "shared_with"
     */
    public function testPropertySharedWith()
    {
    }

    /**
     * Test attribute "asset_tag"
     */
    public function testPropertyAssetTag()
    {
    }

    /**
     * Test attribute "state"
     */
    public function testPropertyState()
    {
    }

    /**
     * Test attribute "fields"
     */
    public function testPropertyFields()
    {
    }

    /**
     * Test attribute "parameters"
     */
    public function testPropertyParameters()
    {
    }

    /**
     * Test attribute "geo_lock"
     */
    public function testPropertyGeoLock()
    {
    }

    /**
     * Test attribute "contacts"
     */
    public function testPropertyContacts()
    {
    }

    /**
     * Test attribute "location"
     */
    public function testPropertyLocation()
    {
    }

    /**
     * Test attribute "zones"
     */
    public function testPropertyZones()
    {
    }

    /**
     * Test attribute "default_trip_labels"
     */
    public function testPropertyDefaultTripLabels()
    {
    }

    /**
     * Test attribute "owner_id"
     */
    public function testPropertyOwnerId()
    {
    }

    /**
     * Test attribute "counter_values"
     */
    public function testPropertyCounterValues()
    {
    }
}
